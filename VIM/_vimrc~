set nocompatible
source $VIMRUNTIME/vimrc_example.vim
source $VIMRUNTIME/mswin.vim
behave mswin
"插件设置
filetype off " required!
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
"Bundle
Bundle 'gmarik/vundle'
Bundle 'fugitive.vim'
set statusline=%<%f\ %h%m%r%{fugitive#statusline()}%=%-14.(%l,%c%V%)\ %P
"Bundle 'SuperTab-continued.'
"Bundle 'ctags.exe'
"let Tlist_Ctags_Cmd='~\.vim\bundle\ctags.exe'
"Bundle 'taglist.vim'
"Bundle 'taglist-plus'
"let Tlist_Show_One_File=1
"let Tlist_Exit_OnlyWindow=1
"JS代码格式化插件；
Bundle '_jsbeautify'
nnoremap <leader>_ff :call g:Jsbeautify()<CR>
Bundle 'minibufexplorerpp'
let g:miniBufExplMapCTabSwitchBufs=1
let g:miniBufExplMapWindowNavVim=1
let g:miniBufExplMapWindowNavArrows=1
Bundle 'winmanager'
let g:winManagerWindowLayout='FileExplorer'
"代码块"
"Cscope
"Bundle 'Cscope'
"在输入()，""等需要配对的符号时，自动帮你补全剩余半个
Bundle 'AutoClose'
Bundle 'UltiSnips'
"让NERDTree不缩放 在关闭Buffer时候
Bundle 'bufkill.vim'

Bundle 'jQuery'
"Bundle 'ZenCoding.vim'
let g:user_zen_settings = { 
  \  'indentation' : '  ', 
  \  'perl' : { 
  \    'aliases' : { 
  \      'req' : 'require ' 
  \    }, 
  \    'snippets' : { 
  \      'use' : "use strict\nuse warnings\n\n", 
  \      'warn' : "warn \"|\";", 
  \    } 
  \  } 
  \} 
  let g:user_zen_expandabbr_key = '<c-return>'   "设置为ctlr+回车 扩展 
  let g:use_zen_complete_tag = 1
Bundle 'AutoComplPop'
map <F8> :WMToggle<cr>
"必不可少，在VIM的编辑窗口树状显示文件目录
Bundle 'The-NERD-tree'
map <F10> :NERDTreeToggle<CR>
let NERDTreeShowBookmarks=1
let NERDTreeShowFiles=1
let NERDTreeShowHidden=1
let NERDTreeIgnore=['\.$','\~$']
let NERDTreeShowLineNumbers=1
"Bundle 'jQuery'
filetype plugin indent on
"最大化
if has('gui_running') && has("win32")
    au GUIEnter * simalt ~x
endif
